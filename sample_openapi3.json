{
  "components": {
    "examples": {
      "ACH-example": {
        "summary": "ACH initiation sample",
        "value": {
          "initiatingPartyId": "testnewpskapi",
          "instructions": [
            {
              "payments": [
                {
                  "preferredPaymentType": "ACH",
                  "accountingEntry": "CREDIT",
                  "requestedExecutionDate": "2022-02-12",
                  "standardEntryClassCode": "PPD",
                  "customerReference": "9238",
                  "transferAmount": {
                    "amount": "10500"
                  },
                  "transactionCode": 22,
                  "creditorInfo": {
                    "routingNumber": 43000096,
                    "orgId": "1908",
                    "token": "450009345"
                  }
                }
              ],
              "debtorInfo": {
                "routingNumber": 43000096,
                "name": "25242433",
                "id": "1037"
              }
            }
          ],
          "multiPaymentId": "uuid-1234-5635-32343"
        }
      },
      "ITR-example": {
        "summary": "ITR initiation sample",
        "value": {
          "initiatingPartyId": "testnewpskapi",
          "instructions": [
            {
              "payments": [
                {
                  "preferredPaymentType": "ITR",
                  "accountingEntry": "CREDIT",
                  "requestedExecutionDate": "2022-03-28",
                  "standardEntryClassCode": "PPD",
                  "customerReference": "PP123456789",
                  "transferAmount": {
                    "amount": "10500"
                  },
                  "transactionCode": 22,
                  "creditorInfo": {
                    "routingNumber": 43000096,
                    "orgId": "1908",
                    "token": "450009345"
                  }
                },
                {
                  "preferredPaymentType": "ITR",
                  "accountingEntry": "CREDIT",
                  "requestedExecutionDate": "2022-03-28",
                  "standardEntryClassCode": "PPD",
                  "customerReference": "PP123456788",
                  "transferAmount": {
                    "amount": "10500"
                  },
                  "transactionCode": 22,
                  "creditorInfo": {
                    "routingNumber": 43000096,
                    "orgId": "1908",
                    "token": "450009345"
                  }
                }
              ],
              "instructorAccount": {
                "accountAlias": "<string>",
                "accountType": "<string>",
                "currency": "<string>",
                "accountNumber": "<number>"
              },
              "debtorInfo": {
                "routingNumber": 43000096,
                "orgId": "1037",
                "token": "252424090"
              }
            }
          ],
          "multiPaymentId": "uuid-1234-5635-32343"
        }
      },
      "Payments-Default-example": {
        "summary": "Default with all optional values",
        "value": {
          "initiatingPartyId": "testnewpskapi",
          "instructions": [
            {
              "payments": [
                {
                  "preferredPaymentType": "RTP",
                  "transferAmount": {
                    "amount": "4500",
                    "currency": "USD"
                  },
                  "channel": "channel",
                  "transactionDescription": "",
                  "instructeeIntermediaryBanks": [
                    {
                      "routingNumber": "routingNumber",
                      "routingType": "orgId"
                    }
                  ],
                  "purposeOfTransfer": "purposeOfTransfer",
                  "transferTypeCode": "transferTypeCode",
                  "customerReference": "CustA March Bill 123",
                  "settlementDateIndication": "",
                  "clearingType": "",
                  "relatedRemittanceInformationLctnElctrncAdr": "",
                  "productType": "productType",
                  "ultimateParty": {
                    "postalAddress": {
                      "zip": "",
                      "country": "",
                      "city": "",
                      "street": "",
                      "addressLine2": "",
                      "addressLine3": "",
                      "state": ""
                    },
                    "name": "",
                    "accountNumber": "14134141"
                  },
                  "accountingEntry": "",
                  "confidentialFlag": "",
                  "fxQuoteId": "fxQuoteId",
                  "purposeOfPayment": "purposeOfPayment",
                  "remittanceAcceptanceTime": "remittanceAcceptanceTime",
                  "creditorInfo": {
                    "routingNumber": "routingNumber",
                    "orgId": "orgId",
                    "token": "token"
                  },
                  "transactionCode": "341",
                  "requestedExecutionDate": "yyyy-MM-dd",
                  "standardEntryClassCode": "",
                  "mailingAddress": {
                    "mailInstruction": "",
                    "zip": "",
                    "bulkMailCode": "",
                    "city": "",
                    "street": "",
                    "name": "",
                    "addressLine2": "",
                    "addressLine3": "",
                    "state": "",
                    "title": ""
                  },
                  "relatedRemittanceInformationLctnMtd": "",
                  "remittanceInfo": [
                    "string"
                  ]
                }
              ],
              "discretionaryData": "data for your reference",
              "debtorInfo": {
                "routingNumber": 43000096,
                "orgId": "1037",
                "token": "252424090"
              }
            }
          ],
          "multiPaymentId": "uuid-1234-5635-32343"
        }
      },
      "WIRE-example": {
        "summary": "WIRE initiation sample",
        "value": {
          "initiatingPartyId": "testnewpskapi",
          "instructions": [
            {
              "payments": [
                {
                  "preferredPaymentType": "WIRE",
                  "accountingEntry": "CREDIT",
                  "requestedExecutionDate": "2020-04-28",
                  "customerReference": "PP123456789",
                  "transferAmount": {
                    "amount": "10500"
                  },
                  "creditorInfo": {
                    "routingNumber": 43000096,
                    "orgId": "1908",
                    "token": "450009322"
                  }
                },
                {
                  "preferredPaymentType": "WIRE",
                  "accountingEntry": "CREDIT",
                  "requestedExecutionDate": "2020-04-28",
                  "customerReference": "PP123456789",
                  "transferAmount": {
                    "amount": "10500"
                  },
                  "creditorInfo": {
                    "routingNumber": 43000096,
                    "orgId": "1908",
                    "token": "450009345"
                  }
                }
              ],
              "debtorInfo": {
                "routingNumber": 43000096,
                "orgId": "1037",
                "token": "252424090"
              }
            }
          ],
          "multiPaymentId": "uuid-1234-5635-32343"
        }
      },
      "RTP-example": {
        "summary": "RTP initiation sample",
        "value": {
          "initiatingPartyId": "testnewpskapi",
          "instructions": [
            {
              "payments": [
                {
                  "preferredPaymentType": "RTP",
                  "accountingEntry": "CREDIT",
                  "requestedExecutionDate": "2022-04-28",
                  "customerReference": "PP123456789",
                  "transferAmount": {
                    "amount": "10500"
                  },
                  "creditorInfo": {
                    "routingNumber": 43000096,
                    "orgId": "1908",
                    "token": "450009345"
                  }
                }
              ],
              "debtorInfo": {
                "routingNumber": 43000096,
                "orgId": "1037",
                "token": "252424090"
              }
            }
          ],
          "multiPaymentId": "uuid-1234-5635-32343"
        }
      }
    },
    "schemas": {
      "updateNetworkDTO": {
        "type": "object",
        "required": [
          "clientKey"
        ],
        "properties": {
          "ceEntitlementEligible": {
            "type": "string",
            "example": "Y"
          },
          "updatedBy": {
            "type": "string",
            "example": "Test"
          },
          "clientKey": {
            "type": "string",
            "example": "ClientKey"
          },
          "avsXIdentificationType": {
            "type": "string",
            "example": "Type"
          },
          "networkName": {
            "type": "string",
            "example": "Network"
          },
          "profileIdentifier": {
            "type": "string",
            "example": "TIN"
          },
          "paymentsEligible": {
            "type": "string",
            "example": "Y"
          },
          "avsXIdentificationValue": {
            "type": "string",
            "example": "Value"
          }
        }
      },
      "PendingApprovalOrganizationAccess": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "number",
            "example": "234"
          },
          "zip": {
            "type": "string",
            "example": "15108"
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Suite 400"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          }
        }
      },
      "208ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PSKDIR_XXXX"
          },
          "message": {
            "type": "string",
            "example": "Already Reported"
          }
        }
      },
      "204ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PSKDIR_XXXX"
          },
          "message": {
            "type": "string",
            "example": "No Content"
          }
        }
      },
      "OrganizationSearchResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "example": "10"
          },
          "currentPageNumber": {
            "type": "integer",
            "example": "1"
          },
          "organizationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSearchResultDto"
            }
          },
          "pageSize": {
            "type": "integer",
            "example": "10"
          },
          "totalElements": {
            "type": "number",
            "example": "60"
          }
        }
      },
      "Payments": {
        "type": "object",
        "required": [
          "preferredPaymentType",
          "creditorInfo",
          "transferAmount"
        ],
        "properties": {
          "preferredPaymentType": {
            "type": "string",
            "enum": [
              "RTP",
              "WIRE",
              "ACH",
              "ITR"
            ],
            "example": ""
          },
          "transferAmount": {
            "$ref": "#/components/schemas/TransferAmount"
          },
          "channel": {
            "type": "string",
            "example": "channel"
          },
          "transactionDescription": {
            "type": "string",
            "example": ""
          },
          "instructeeIntermediaryBanks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "routingNumber": {
                  "type": "string",
                  "example": "routingNumber"
                },
                "routingType": {
                  "type": "string",
                  "enum": [
                    "SWIFT",
                    "ABA"
                  ],
                  "example": "orgId"
                }
              }
            }
          },
          "purposeOfTransfer": {
            "type": "string",
            "example": "purposeOfTransfer"
          },
          "transferTypeCode": {
            "type": "string",
            "example": "transferTypeCode"
          },
          "customerReference": {
            "type": "string",
            "example": ""
          },
          "settlementDateIndication": {
            "type": "string",
            "example": ""
          },
          "clearingType": {
            "type": "string",
            "example": ""
          },
          "relatedRemittanceInformationLctnElctrncAdr": {
            "type": "string",
            "example": ""
          },
          "productType": {
            "type": "string",
            "example": "productType"
          },
          "ultimateParty": {
            "type": "object",
            "properties": {
              "postalAddress": {
                "type": "object",
                "properties": {
                  "zip": {
                    "type": "string",
                    "example": ""
                  },
                  "country": {
                    "type": "string",
                    "example": ""
                  },
                  "city": {
                    "type": "string",
                    "example": ""
                  },
                  "street": {
                    "type": "string",
                    "example": ""
                  },
                  "addressLine2": {
                    "type": "string",
                    "example": ""
                  },
                  "addressLine3": {
                    "type": "string",
                    "example": ""
                  },
                  "state": {
                    "type": "string",
                    "example": ""
                  }
                }
              },
              "name": {
                "type": "string",
                "example": ""
              },
              "accountNumber": {
                "type": "string",
                "example": "14134141"
              }
            }
          },
          "accountingEntry": {
            "type": "string",
            "example": ""
          },
          "confidentialFlag": {
            "type": "string",
            "example": ""
          },
          "fxQuoteId": {
            "type": "string",
            "example": "fxQuoteId"
          },
          "purposeOfPayment": {
            "type": "string",
            "example": "purposeOfPayment"
          },
          "remittanceAcceptanceTime": {
            "type": "string",
            "example": "remittanceAcceptanceTime"
          },
          "creditorInfo": {
            "type": "object",
            "required": [
              "token",
              "orgId",
              "routingNumber"
            ],
            "properties": {
              "routingNumber": {
                "type": "string",
                "example": "routingNumber"
              },
              "orgId": {
                "type": "string",
                "example": "orgId"
              },
              "token": {
                "type": "string",
                "example": "token"
              }
            }
          },
          "transactionCode": {
            "type": "integer",
            "example": "341"
          },
          "requestedExecutionDate": {
            "type": "string",
            "example": "yyyy-MM-dd"
          },
          "standardEntryClassCode": {
            "type": "string",
            "example": ""
          },
          "mailingAddress": {
            "type": "object",
            "properties": {
              "mailInstruction": {
                "type": "string",
                "example": ""
              },
              "zip": {
                "type": "string",
                "example": ""
              },
              "bulkMailCode": {
                "type": "string",
                "example": ""
              },
              "city": {
                "type": "string",
                "example": ""
              },
              "street": {
                "type": "string",
                "example": ""
              },
              "name": {
                "type": "string",
                "example": ""
              },
              "addressLine2": {
                "type": "string",
                "example": ""
              },
              "addressLine3": {
                "type": "string",
                "example": ""
              },
              "state": {
                "type": "string",
                "example": ""
              },
              "title": {
                "type": "string",
                "example": ""
              }
            }
          },
          "relatedRemittanceInformationLctnMtd": {
            "type": "string",
            "example": ""
          },
          "remittanceInfo": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "instructions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "payments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "preferredPaymentType": {
                        "type": "string",
                        "example": "ACH"
                      },
                      "traceId": {
                        "type": "string",
                        "example": "242sdf"
                      },
                      "amount": {
                        "type": "number",
                        "example": "100.00"
                      },
                      "customerReference": {
                        "type": "string",
                        "example": "234"
                      }
                    }
                  }
                }
              }
            }
          },
          "multipaymentId": {
            "type": "string",
            "example": "234"
          },
          "statusDesc": {
            "type": "string",
            "example": "Request Received successfully"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-02-14T16:01:44.665-04:00"
          },
          "statusCode": {
            "type": "integer",
            "example": "RCVD"
          }
        }
      },
      "OrganizationUpdateResponse": {
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "example": "15108"
          },
          "country": {
            "type": "string",
            "example": "US"
          },
          "statusDesc": {
            "type": "string",
            "example": "Organization Updated Successfully"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "608 Aberdeen Ct"
          },
          "pinacleCompId": {
            "type": "string",
            "example": "7989898"
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Coraopolis"
          },
          "phone": {
            "type": "string",
            "example": "901-903-9021"
          },
          "organizationRole": {
            "type": "string",
            "example": "PAYER"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": "test@bobcat.com"
          }
        }
      },
      "400ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PSKDIR_XXXX"
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          }
        }
      },
      "OrganizationAccountDelete": {
        "type": "object",
        "properties": {
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "token": {
            "type": "string",
            "example": "444404444"
          }
        }
      },
      "ApproveOrganizationAccessResponseDTO": {
        "type": "object",
        "properties": {
          "requestorOrganization": {
            "type": "number",
            "example": "234"
          },
          "message": {
            "type": "string",
            "example": "Decision Updated Successfully"
          }
        }
      },
      "SaveOrganizationResponse": {
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "example": "12345"
          },
          "country": {
            "type": "string",
            "example": "USA"
          },
          "statusDesc": {
            "type": "string",
            "example": "Organization Created Successfully"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "privacy": {
            "type": "string",
            "example": "PRIVATE"
          },
          "identityValue": {
            "type": "string",
            "example": "783452345"
          },
          "pinacleCompId": {
            "type": "string",
            "example": "7989898"
          },
          "organizationId": {
            "type": "integer",
            "example": 67900
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Suite 400"
          },
          "phone": {
            "type": "string",
            "example": "901-903-9021"
          },
          "identityType": {
            "type": "string",
            "example": "UUID"
          },
          "organizationRole": {
            "type": "string",
            "example": "PAYER"
          },
          "taxId": {
            "type": "string",
            "example": "123456789"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccountResponse"
            }
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": "test@bobcat.com"
          },
          "effectiveDate": {
            "type": "string",
            "example": "MM/dd/yyyy"
          }
        }
      },
      "OrganizationAccess": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "number",
            "example": "234"
          },
          "zip": {
            "type": "string",
            "example": "15108"
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Suite 400"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccountResponse"
            }
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          }
        }
      },
      "OrganizationAccountRequest": {
        "type": "object",
        "required": [
          "accountNumber",
          "routingNumber",
          "currency"
        ],
        "properties": {
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "accountName": {
            "type": "string",
            "example": "BobCat LLC Checking"
          },
          "routingType": {
            "type": "string",
            "enum": [
              "SWIFT",
              "ABA"
            ],
            "example": "SWIFT"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "DDA",
              "SACC"
            ],
            "example": "DDA"
          },
          "currency": {
            "type": "string",
            "enum": [
              "USD"
            ],
            "example": "USD"
          },
          "accountNumber": {
            "type": "string",
            "example": "0956323662"
          }
        }
      },
      "OrganizationSearchRequest": {
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "example": "15108"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "npi": {
            "type": "string",
            "example": ""
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "tin": {
            "type": "string",
            "example": "1234337890"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "uuid": {
            "type": "string",
            "example": ""
          }
        }
      },
      "OrganizationSearchResultDto": {
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "example": "12345"
          },
          "country": {
            "type": "string",
            "example": "USA"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "privacy": {
            "type": "string",
            "enum": [
              "PRIVATE",
              "PUBLIC"
            ],
            "example": "PRIVATE"
          },
          "organizationId": {
            "type": "integer",
            "example": 67900
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Suite 400"
          },
          "phone": {
            "type": "string",
            "example": "901-903-9021"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccountResponse"
            }
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": "test@bobcat.com"
          }
        }
      },
      "OrganizationAccountResponse": {
        "type": "object",
        "required": [
          "accountName",
          "accountNumber",
          "routingNumber",
          "currency",
          "accountType"
        ],
        "properties": {
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "accountName": {
            "type": "string",
            "example": "BobCat LLC Checking"
          },
          "accountType": {
            "type": "string",
            "example": "DDA"
          },
          "currency": {
            "type": "string",
            "example": "USD"
          },
          "accountNumber": {
            "type": "string",
            "example": "******3662"
          },
          "token": {
            "type": "string",
            "example": "1677995786"
          }
        }
      },
      "UpdatePaymentStatusRequest": {
        "properties": {
          "traceId": {
            "type": "string",
            "example": ""
          },
          "addendaInfo": {
            "type": "string",
            "example": ""
          },
          "reasonDescription": {
            "type": "string",
            "example": ""
          },
          "clientId": {
            "type": "string",
            "example": ""
          },
          "statusDesc": {
            "type": "string",
            "example": ""
          },
          "paymentReference": {
            "type": "string",
            "example": ""
          },
          "transferAmount": {
            "type": "string",
            "example": ""
          },
          "eventType": {
            "type": "string",
            "example": ""
          },
          "paymentType": {
            "type": "string",
            "example": ""
          },
          "executedPaymentType": {
            "type": "string",
            "example": ""
          },
          "initiatingPartyId": {
            "type": "string",
            "example": ""
          },
          "senderId": {
            "type": "string",
            "example": ""
          },
          "multipaymentId": {
            "type": "string",
            "example": ""
          },
          "customerReference": {
            "type": "string",
            "example": ""
          },
          "instructionId": {
            "type": "string",
            "example": ""
          },
          "reasonCode": {
            "type": "string",
            "example": ""
          },
          "clearingReference": {
            "type": "string",
            "example": ""
          },
          "statusCode": {
            "type": "string",
            "example": ""
          }
        }
      },
      "ApprovedOrganizationAccountResponse": {
        "type": "object",
        "properties": {
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "token": {
            "type": "string",
            "example": "1677995786"
          }
        }
      },
      "OrganizationAccessRequest": {
        "type": "object",
        "required": [
          "requesterOrgId",
          "requestedOrgId"
        ],
        "properties": {
          "requesterOrgId": {
            "type": "number",
            "example": "234"
          },
          "requestedOrgId": {
            "type": "number",
            "example": "789"
          }
        }
      },
      "OrganizationRequest": {
        "type": "object",
        "required": [
          "organizationName",
          "addressLineOne",
          "city",
          "state",
          "country",
          "zip",
          "identityType",
          "identityValue",
          "privacy",
          "organizationRole",
          "effectiveDate"
        ],
        "properties": {
          "zip": {
            "type": "string",
            "example": "12345"
          },
          "country": {
            "type": "string",
            "example": "USA"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "privacy": {
            "type": "string",
            "enum": [
              "PRIVATE",
              "PUBLIC"
            ],
            "example": "PRIVATE"
          },
          "identityValue": {
            "type": "string",
            "example": "bob-783452345"
          },
          "pinacleCompId": {
            "type": "string",
            "example": "7989898"
          },
          "parentOrganizationId": {
            "type": "integer",
            "example": 1234
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Suite 400"
          },
          "phone": {
            "type": "string",
            "example": "901-903-9021"
          },
          "identityType": {
            "type": "string",
            "example": "UUID"
          },
          "organizationRole": {
            "type": "string",
            "enum": [
              "PAYER",
              "PAYEE",
              "BOTH"
            ],
            "example": "PAYER"
          },
          "taxId": {
            "type": "string",
            "example": "123456789"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccountRequest"
            }
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": "test@bobcat.com"
          },
          "effectiveDate": {
            "type": "string",
            "example": "MM/dd/yyyy"
          }
        }
      },
      "AdditionalInfo": {
        "type": "object",
        "properties": {
          "addendaInfo": {
            "type": "string",
            "example": null
          },
          "reasonDescription": {
            "type": "string",
            "example": "Payment cancelled due to <Reason>"
          },
          "reasonCode": {
            "type": "string",
            "example": "CANCEL"
          },
          "type": {
            "type": "string",
            "example": "ERROR"
          },
          "userId": {
            "type": "string",
            "example": null
          }
        }
      },
      "PaymentStatusResponse": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "example": "uuid-1234-5635-32343"
          },
          "statusDesc": {
            "type": "string",
            "example": "Request received successfully"
          },
          "paymentReference": {
            "type": "string",
            "example": "JA5UG01033UJ132R"
          },
          "transferAmount": {
            "$ref": "#/components/schemas/TransferAmount"
          },
          "paymentType": {
            "type": "string",
            "example": "RTP"
          },
          "executedPaymentType": {
            "type": "string",
            "example": "RTP"
          },
          "initiatingPartyId": {
            "type": "string",
            "example": "testnewpskapi"
          },
          "multipaymentId": {
            "type": "string",
            "example": "uuid-1234-5635-32343"
          },
          "customerReference": {
            "type": "string",
            "example": "July Payment 2022"
          },
          "additionalInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalInfo"
            }
          },
          "statusCode": {
            "type": "string",
            "example": "RCVD"
          },
          "timestamp": {
            "type": "string",
            "example": "2020-02-14T16:01:44.665-04:00"
          },
          "clearingReference": {
            "type": "string",
            "example": null
          }
        }
      },
      "AccountBasicInfoDTO": {
        "type": "object",
        "required": [
          "token",
          "routingNumber"
        ],
        "properties": {
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "isApproved": {
            "type": "string",
            "example": "Y"
          },
          "token": {
            "type": "string",
            "example": "1677995786"
          }
        }
      },
      "500ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PSKDIR_XXXX"
          },
          "message": {
            "type": "string",
            "example": "Internal Server"
          }
        }
      },
      "ApprovedOrganizationAccess": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "number",
            "example": "234"
          },
          "zip": {
            "type": "string",
            "example": "15108"
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Suite 400"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovedOrganizationAccountResponse"
            }
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          }
        }
      },
      "BasicTokenInfo": {
        "type": "object",
        "properties": {
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "accountName": {
            "type": "string",
            "example": "BobCat LLC Checking"
          },
          "accountNumber": {
            "type": "string",
            "example": "0956323662"
          }
        }
      },
      "404ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PSKDIR_XXXX"
          },
          "message": {
            "type": "string",
            "example": "Not Found"
          }
        }
      },
      "NetworkAccounts": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MaskedNetworkAccountTokenResponse"
        }
      },
      "networkAccountToken": {
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string",
            "example": "1002422447"
          }
        }
      },
      "GetAllOrganizationResponse": {
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "example": "12345"
          },
          "country": {
            "type": "string",
            "example": "USA"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "privacy": {
            "type": "string",
            "example": "PRIVATE"
          },
          "revisionNum": {
            "type": "integer",
            "example": "1"
          },
          "identityValue": {
            "type": "string",
            "example": "783452345"
          },
          "pinacleCompId": {
            "type": "string",
            "example": "7989898"
          },
          "organizationId": {
            "type": "integer",
            "example": 67900
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Suite 400"
          },
          "phone": {
            "type": "string",
            "example": "901-903-9021"
          },
          "identityType": {
            "type": "string",
            "example": "UUID"
          },
          "organizationRole": {
            "type": "string",
            "example": "PAYER"
          },
          "taxId": {
            "type": "string",
            "example": "123456789"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccountResponse"
            }
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": "test@bobcat.com"
          },
          "effectiveDate": {
            "type": "string",
            "example": "MM/dd/yyyy"
          }
        }
      },
      "401ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PSKDIR_XXXX"
          },
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "OrganizationSearchV2Response": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "example": "10"
          },
          "currentPageNumber": {
            "type": "integer",
            "example": "1"
          },
          "organizationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSearchResultDto"
            }
          },
          "pageSize": {
            "type": "integer",
            "example": "10"
          },
          "totalElements": {
            "type": "number",
            "example": "60"
          }
        }
      },
      "CustomerReferenceStatusResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentStatusResponse"
            }
          }
        }
      },
      "networkDTO": {
        "type": "object",
        "required": [
          "networkName",
          "networkType",
          "clientKey",
          "activationDate",
          "profileIdentifier",
          "ceEntitlementEligible",
          "paymentsEligible"
        ],
        "properties": {
          "deactivationDate": {
            "type": "string",
            "example": "12/09/2021"
          },
          "ceEntitlementEligible": {
            "type": "string",
            "example": "Y"
          },
          "clientKey": {
            "type": "string",
            "example": "ClientKey"
          },
          "avsXIdentificationType": {
            "type": "string",
            "example": "Type"
          },
          "createdBy": {
            "type": "string",
            "example": "Test"
          },
          "networkName": {
            "type": "string",
            "example": "Network"
          },
          "profileIdentifier": {
            "type": "string",
            "example": "TIN"
          },
          "paymentsEligible": {
            "type": "string",
            "example": "Y"
          },
          "networkType": {
            "type": "string",
            "example": "Type"
          },
          "avsXIdentificationValue": {
            "type": "string",
            "example": "Value"
          },
          "activationDate": {
            "type": "string",
            "example": "11/09/2021"
          },
          "pinacleCompId": {
            "type": "string",
            "example": "PincaleId"
          }
        }
      },
      "ApprovedAccountBasicInfoDTO": {
        "type": "object",
        "required": [
          "token",
          "routingNumber"
        ],
        "properties": {
          "accountId": {
            "type": "integer",
            "example": 79400
          },
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "token": {
            "type": "string",
            "example": "1677995786"
          }
        }
      },
      "TransferAmount": {
        "type": "object",
        "required": [
          "amount",
          "currency"
        ],
        "properties": {
          "amount": {
            "type": "string",
            "example": "4500"
          },
          "currency": {
            "type": "string",
            "enum": [
              "USD"
            ],
            "example": "USD"
          }
        }
      },
      "MlpStatusResponse": {
        "type": "object",
        "properties": {
          "statusDesc": {
            "type": "string",
            "example": ""
          },
          "statusCode": {
            "type": "string",
            "example": ""
          }
        }
      },
      "OrganizationResponse": {
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "example": "12345"
          },
          "country": {
            "type": "string",
            "example": "USA"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "addressLineOne": {
            "type": "string",
            "example": "800 codwell rd"
          },
          "privacy": {
            "type": "string",
            "example": "PRIVATE"
          },
          "identityValue": {
            "type": "string",
            "example": "783452345"
          },
          "pinacleCompId": {
            "type": "string",
            "example": "7989898"
          },
          "organizationId": {
            "type": "integer",
            "example": 67900
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Suite 400"
          },
          "phone": {
            "type": "string",
            "example": "901-903-9021"
          },
          "identityType": {
            "type": "string",
            "example": "UUID"
          },
          "organizationRole": {
            "type": "string",
            "example": "PAYER"
          },
          "taxId": {
            "type": "string",
            "example": "123456789"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAccountResponse"
            }
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          },
          "email": {
            "type": "string",
            "example": "test@bobcat.com"
          },
          "effectiveDate": {
            "type": "string",
            "example": "MM/dd/yyyy"
          }
        }
      },
      "PaymentRequest": {
        "type": "object",
        "properties": {
          "initiatingPartyId": {
            "type": "string",
            "example": "initiatingPartyId"
          },
          "instructions": {
            "type": "array",
            "items": {
              "properties": {
                "payments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payments"
                  }
                },
                "discretionaryData": {
                  "type": "string",
                  "example": "discretionaryData"
                },
                "instructorAccount": {
                  "type": "object",
                  "properties": {
                    "accountType": {
                      "type": "string",
                      "enum": [
                        "DDA",
                        "SACC"
                      ],
                      "example": "DDA"
                    },
                    "currency": {
                      "type": "string",
                      "example": "currency"
                    },
                    "accountNumber": {
                      "type": "string",
                      "example": "accountNumber"
                    }
                  }
                },
                "debtorInfo": {
                  "type": "object",
                  "properties": {
                    "routingNumber": {
                      "type": "string",
                      "example": "routingNumber"
                    },
                    "name": {
                      "type": "string",
                      "example": "accountNumber"
                    },
                    "orgId": {
                      "type": "string",
                      "example": "orgId"
                    }
                  }
                }
              }
            }
          },
          "multiPaymentId": {
            "type": "string",
            "example": "multiPaymentId"
          }
        }
      },
      "OrganizationAccessDecision": {
        "type": "object",
        "properties": {
          "requestorOrganization": {
            "type": "number",
            "example": "234"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountBasicInfoDTO"
            }
          }
        }
      },
      "MlpStatusRequest": {
        "type": "object",
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatePaymentStatusRequest"
            }
          }
        }
      },
      "MaskedNetworkAccountTokenResponse": {
        "type": "object",
        "required": [
          "accountNumber",
          "routingNumber",
          "currency"
        ],
        "properties": {
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "accountNumber": {
            "type": "string",
            "example": "******3662"
          },
          "token": {
            "type": "string",
            "example": "4567345674"
          }
        }
      },
      "UnMaskedNetworkAccountTokenResponse": {
        "type": "object",
        "required": [
          "accountNumber",
          "routingNumber",
          "currency"
        ],
        "properties": {
          "routingNumber": {
            "type": "string",
            "example": "000010000"
          },
          "accountNumber": {
            "type": "string",
            "example": "4563783662"
          },
          "token": {
            "type": "string",
            "example": "4567345674"
          }
        }
      },
      "OrganizationUpdateRequest": {
        "type": "object",
        "required": [
          "email",
          "addressLineOne",
          "city",
          "state",
          "country",
          "zip",
          "organizationRole"
        ],
        "properties": {
          "zip": {
            "type": "string",
            "example": "15108"
          },
          "country": {
            "type": "string",
            "example": "US"
          },
          "addressLineTwo": {
            "type": "string",
            "example": "Coraopolis"
          },
          "organizationName": {
            "type": "string",
            "example": "BobCat LLC"
          },
          "phone": {
            "type": "string",
            "example": "901-903-9021"
          },
          "city": {
            "type": "string",
            "example": "Pittsburgh"
          },
          "organizationRole": {
            "type": "string",
            "example": "PAYER"
          },
          "addressLineOne": {
            "type": "string",
            "example": "608 Aberdeen Ct"
          },
          "state": {
            "type": "string",
            "example": "PA"
          },
          "addressLineThree": {
            "type": "string",
            "example": ""
          },
          "pinacleCompId": {
            "type": "string",
            "example": "7989898"
          },
          "email": {
            "type": "string",
            "example": "test@bobcat.com"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "flows": {
          "authorizationCode": {
            "tokenUrl": "https://api-cb-qa.testnew.com/secoauth2/token",
            "authorizationUrl": "https://api-cb-qa.testnew.com/secoauth2/authorization",
            "scopes": {
              "invokeDir, verifyAccount, initiatePayments": "Used to retrieve all APIs belongs to Payment SDK API"
            }
          },
          "clientCredentials": {
            "tokenUrl": "https://api-cb-qa.testnew.com/secoauth2/token",
            "scopes": {
              "invokeDir, verifyAccount, initiatePayments": "Used to retrieve all APIs belongs to Payment SDK API"
            }
          }
        },
        "description": "OAuth2 Client credentials flow to be used by clients to obtain an access token outside of the context of a user",
        "type": "oauth2"
      }
    }
  },
  "servers": [
    {
      "description": "QA STAGE Coldbox server",
      "url": "https://api-cb-qa.testnew.com/api/paymentsdk/v1"
    },
    {
      "description": "QA STAGE Warmbox server",
      "url": "https://api-wb-qa.testnew.com/api/paymentsdk/v1"
    },
    {
      "description": "Production server",
      "url": "https://api.testnew.com/api/paymentsdk/v1"
    }
  ],
  "basePath": "/api/paymentsdk/v1",
  "openapi": "3.0.0",
  "paths": {
    "/organizations": {
      "post": {
        "summary": "Creates New Organization within the network",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationRequest"
              }
            }
          }
        },
        "description": "",
        "operationId": "createOrganizations",
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveOrganizationResponse"
                }
              }
            }
          },
          "208": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/208ErrorResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Manage Organization )"
        ]
      }
    },
    "/network/accounts": {
      "get": {
        "summary": "Get Account Tokens associated with Network ",
        "description": "",
        "operationId": "getNetworkAccountTokens",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkAccounts"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/404ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          }
        ],
        "tags": [
          "Network API ( Manage Network Account Tokens )"
        ]
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "summary": "Fetches Organization details within the Network via Organization Id",
        "description": "",
        "operationId": "retrieveOrganizationById",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllOrganizationResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Manage Organization )"
        ]
      },
      "delete": {
        "summary": "Deletes an existing Organization within Network",
        "description": "Deletes an Organization within network by Organization Id",
        "operationId": "deleteOrganization",
        "responses": {
          "200": {
            "description": "Organization Deleted Successfully"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "description": "The id of the organization that needs to be deleted",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Manage Organization )"
        ]
      },
      "put": {
        "summary": "Updates an existing Organization within Network",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdateRequest"
              }
            }
          }
        },
        "description": "Update Organization details of an Organization Id",
        "operationId": "updateOrganization",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "description": "The id of the organization that needs to be updated",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Manage Organization )"
        ]
      }
    },
    "/network/tokens": {
      "post": {
        "summary": "Get Network Account Details by Account Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/networkAccountToken"
              }
            }
          }
        },
        "operationId": "retrieveNetwork",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnMaskedNetworkAccountTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/404ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          }
        ],
        "tags": [
          "Network API ( Manage Network Account Tokens )"
        ]
      }
    },
    "/payments": {
      "post": {
        "summary": "Initiate a Multi Payment Request from an Organization to another Organization within the Network",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              },
              "examples": {
                "ACH-example": {
                  "$ref": "#/components/examples/ACH-example"
                },
                "Default-example": {
                  "$ref": "#/components/examples/Payments-Default-example"
                },
                "WIRE-example": {
                  "$ref": "#/components/examples/WIRE-example"
                },
                "RTP-example": {
                  "$ref": "#/components/examples/RTP-example"
                }
              }
            }
          }
        },
        "description": "",
        "operationId": "processPayment",
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          }
        ],
        "tags": [
          "PSK Multipayment Initiation API"
        ]
      }
    },
    "/organizations/{organizationId}/accounts": {
      "post": {
        "summary": "Add Account(s) to an existing Organization within the Network",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationAccountRequest"
                }
              }
            }
          }
        },
        "description": "Add Account(s) to an existing Organization within the Network",
        "operationId": "saveAccounts",
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAccountResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "description": "The id of the organization to which account(s) are added",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Manage Accounts )"
        ]
      },
      "get": {
        "summary": "Get Account(s) for an Organization within the Network",
        "description": "Get Account(s) for an Organization within the Network",
        "operationId": "getAllAccountsForTheOrganization",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationAccountResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Manage Accounts )"
        ]
      }
    },
    "/search-organizations": {
      "post": {
        "summary": "Get paginated Organization matching search criteria",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSearchRequest"
              }
            }
          }
        },
        "description": "",
        "operationId": "getPaginatedOrganizations",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSearchV2Response"
                  }
                }
              }
            }
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/204ErrorResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/500ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "required": false
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "size",
            "required": false
          }
        ],
        "tags": [
          "Directory API ( Search Organization )"
        ]
      }
    },
    "/organizations/{organizationId}/delete-accounts": {
      "post": {
        "summary": "Delete Token(s)/Account(s) from an Organization within the Network",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationAccountDelete"
                }
              }
            }
          }
        },
        "description": "Delete Token(s)/Account(s) from an Organization within the Network",
        "operationId": "deleteAllAccount",
        "responses": {
          "200": {
            "description": "Account Deleted Sucessfully"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/404ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Manage Accounts )"
        ]
      }
    },
    "/organizations/{organizationId}/access/approved": {
      "get": {
        "summary": "Get List of Organizations and Tokens to which access was approved/granted.",
        "description": "Get List of Organizations and Tokens to which access was approved/granted.",
        "operationId": "getApprovedAccess",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApprovedOrganizationAccess"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/404ErrorResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/500ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Organization Access Management )"
        ]
      }
    },
    "/organizations/{organizationId}/sub-organizations": {
      "get": {
        "summary": "Retrieve list of Sub/Child Organizations",
        "description": "",
        "operationId": "sub-organizations",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "example": 1001
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "N"
            },
            "in": "query",
            "name": "showAccountNumber",
            "required": false
          }
        ],
        "tags": [
          "Directory API ( Organization Access Management )"
        ]
      }
    },
    "/payments/{multipaymentId}/{traceId}/status": {
      "get": {
        "summary": "Get the Status of a single payment within the Multipayment request of payment type RTP, WIRE & ACH",
        "description": "",
        "operationId": "getPaymentStatus",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PaymentResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "multipaymentId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "traceId",
            "required": true
          }
        ],
        "tags": [
          "PSK Payment Status API"
        ]
      }
    },
    "/organizations/{organizationId}/tokens/{token}": {
      "get": {
        "summary": "Get Account details details for provided token for a given organization",
        "description": "",
        "operationId": "getAccountByToken",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicTokenInfo"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "token",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Manage Accounts )"
        ]
      }
    },
    "/payments/customerreferences/{customerreference}/status": {
      "get": {
        "summary": "Get 10 Most Recent Payments associated to a Customer Reference",
        "description": "",
        "operationId": "getCustomerPaymentStatus",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CustomerReferenceStatusResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "customerreference",
            "required": true
          }
        ],
        "tags": [
          "PSK Payment Status API"
        ]
      }
    },
    "/organizations/{organizationId}/access/decision": {
      "post": {
        "summary": "Approves/Deny Access Request of a Requestor Organization within Network",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationAccessDecision"
                }
              }
            }
          }
        },
        "description": "Requestee Organization may Approve or Deny the request from another organization within same network. Requestee organization may grant access to some partial/all account tokens accounts as desired.",
        "operationId": "accessDecision",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproveOrganizationAccessResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/404ErrorResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/500ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Organization Access Management )"
        ]
      }
    },
    "/organizations/{organizationId}/granted-access": {
      "get": {
        "summary": "Retrieve list of Organizations that an organization (current) have approved for",
        "description": "",
        "operationId": "hasaccessto",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApprovedOrganizationAccess"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/500ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer",
              "example": 1001
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "example": "N"
            },
            "in": "query",
            "name": "showAccountNumber",
            "required": false
          }
        ],
        "tags": [
          "Directory API ( Organization Access Management )"
        ]
      }
    },
    "/organizations/{requestorOrgId}/request-access": {
      "post": {
        "summary": "Initiates Request Access for an (private) Organization within the Network",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "example": 345
                }
              }
            }
          }
        },
        "description": "",
        "operationId": "requestAccess",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 345
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "header used to indicate the media type of the resource.  Accept only  'application/json'.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "requestorOrgId",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Organization Access Management )"
        ]
      }
    },
    "/organizations/{organizationId}/pending-request": {
      "get": {
        "summary": "Retrieve List of Organization(s) which requested access to Current Organization",
        "description": "",
        "operationId": "getPendingRequest",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PendingApprovalOrganizationAccess"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Organization Access Management )"
        ]
      }
    },
    "/organizations/{organizationId}/pending-approval": {
      "get": {
        "summary": "Retrieve list of Organizations (PRIVATE) to which access was requested within the Network",
        "description": "Retrieve list of Organizations to which access was requested within the Network",
        "operationId": "getPendingDecisions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PendingApprovalOrganizationAccess"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400ErrorResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/401ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "HTTP authorization header to provide OAuth2 bearer token",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "origin",
            "description": "The web domain initiating the HTTP request. It doesn't include any path information.",
            "required": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "tags": [
          "Directory API ( Organization Access Management )"
        ]
      }
    }
  },
  "host": "$(host)",
  "produces": [
    "application/json"
  ],
  "categories": [
    {
      "name": "Payment SDK"
    }
  ],
  "schemes": [
    "https"
  ],
  "info": {
    "contact": {
      "name": "testnew Developer",
      "url": "https://developer.testnew.com"
    },
    "description": "Payments SDK enables easy integration of testnew Payment origination across various channel and business applications",
    "title": "Payment SDK",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Corporate & Institutional Banking Customer"
    }
  ],
  "consumes": [
    "application/json"
  ]
}